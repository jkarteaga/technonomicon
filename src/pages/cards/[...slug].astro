---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import FancyParagraph from "../../components/FancyParagraph.astro";
import More from "../../components/More.astro";
import TableOfContents from "../../components/TableOfContents.astro";
import components from "../../components/Cards/NormalCard/components";
import Card from "../../components/Cards/NormalCard/Card.astro";
import HoloCard from "../../components/Cards/HoloCard/Card.astro";
import TipCard from "../../components/Cards/TipCard/Card.astro";
import Empty from "../../components/Empty.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection("cards");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();
const issue = entry;
const CardToDisplay = entry.data.type === "tip" ? TipCard : Card;
---

<Layout
  issueSlug={`/issues/${issue.slug}`}
  title={entry.data.title}
  frontmatter={entry.data}
>
  <div class="grid items-start grid-cols-12">
    <div
      transition:name={entry.data.title}
      class="px-2 col-span-5 stack w-full md:px-10"
    >
      <CardToDisplay markdown={entry} components={components} />
      {
        entry.data.type === "product" && (
          <HoloCard markdown={entry} components={components} />
        )
      }
    </div>
    <div class="prose col-span-7 sticky top-10 h-fit">
      <Content components={{ Card: Empty, More: More, Button: More }} />
    </div>
  </div>
</Layout>
